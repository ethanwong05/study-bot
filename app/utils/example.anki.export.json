[
  {
    "name": "Git: rebase vs merge",
    "description": {
      "front": "Git: rebase vs merge",
      "back": "Merge keeps a merge commit; rebase rewrites commits onto a new base for a linear history."
    },
    "tags": [
      "devtools",
      "git"
    ],
    "difficulty_score": 1.472
  },
  {
    "name": "SQL: INNER JOIN vs LEFT JOIN",
    "description": {
      "front": "SQL: INNER JOIN vs LEFT JOIN",
      "back": "INNER: rows matching in both tables. LEFT: all rows from left table, NULLs when no right-side match."
    },
    "tags": [
      "databases",
      "sql"
    ],
    "difficulty_score": 1.104
  },
  {
    "name": "Reminder about cloze",
    "description": {
      "front": "Reminder about cloze",
      "back": "Use Anki’s Cloze model for {{c1::cloze deletions}} (not used with this Basic model)."
    },
    "tags": [
      "anki"
    ],
    "difficulty_score": 1.104
  },
  {
    "name": "What is the Big-O time complexity of binary search?",
    "description": {
      "front": "What is the Big-O time complexity of binary search?",
      "back": "O(log n)"
    },
    "tags": [
      "algorithms",
      "cs"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "Define a stack.",
    "description": {
      "front": "Define a stack.",
      "back": "LIFO data structure. Push adds to top; pop removes top."
    },
    "tags": [
      "cs",
      "data-structures"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "Define a queue.",
    "description": {
      "front": "Define a queue.",
      "back": "FIFO data structure: enqueue at rear, dequeue at front."
    },
    "tags": [
      "cs",
      "data-structures"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "Pythagorean theorem",
    "description": {
      "front": "Pythagorean theorem",
      "back": "a^2 + b^2 = c^2"
    },
    "tags": [
      "geometry",
      "math"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "Derivative of sin(x)",
    "description": {
      "front": "Derivative of sin(x)",
      "back": "cos(x)"
    },
    "tags": [
      "calculus",
      "math"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "HTTP 404 means?",
    "description": {
      "front": "HTTP 404 means?",
      "back": "Not Found — the server can’t find the requested resource."
    },
    "tags": [
      "http",
      "web"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "What does DNS do?",
    "description": {
      "front": "What does DNS do?",
      "back": "Resolves human-readable domain names to IP addresses."
    },
    "tags": [
      "networking"
    ],
    "difficulty_score": -0.736
  },
  {
    "name": "Newton’s Second Law",
    "description": {
      "front": "Newton’s Second Law",
      "back": "F = m·a"
    },
    "tags": [
      "physics"
    ],
    "difficulty_score": -1.104
  },
  {
    "name": "What does idempotent mean (HTTP)?",
    "description": {
      "front": "What does idempotent mean (HTTP)?",
      "back": "Multiple identical requests have the same effect as one (e.g., GET, PUT, DELETE)."
    },
    "tags": [
      "http",
      "web"
    ],
    "difficulty_score": -1.104
  }
]